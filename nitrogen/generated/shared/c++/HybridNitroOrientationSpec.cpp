///
/// HybridNitroOrientationSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridNitroOrientationSpec.hpp"

namespace margelo::nitro::orientation {

  void HybridNitroOrientationSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("getOrientation", &HybridNitroOrientationSpec::getOrientation);
      prototype.registerHybridMethod("getDeviceOrientation", &HybridNitroOrientationSpec::getDeviceOrientation);
      prototype.registerHybridMethod("lockToPortrait", &HybridNitroOrientationSpec::lockToPortrait);
      prototype.registerHybridMethod("lockToPortraitUpsideDown", &HybridNitroOrientationSpec::lockToPortraitUpsideDown);
      prototype.registerHybridMethod("lockToLandscape", &HybridNitroOrientationSpec::lockToLandscape);
      prototype.registerHybridMethod("lockToLandscapeLeft", &HybridNitroOrientationSpec::lockToLandscapeLeft);
      prototype.registerHybridMethod("lockToLandscapeRight", &HybridNitroOrientationSpec::lockToLandscapeRight);
      prototype.registerHybridMethod("unlockAllOrientations", &HybridNitroOrientationSpec::unlockAllOrientations);
      prototype.registerHybridMethod("getAutoRotateState", &HybridNitroOrientationSpec::getAutoRotateState);
    });
  }

} // namespace margelo::nitro::orientation
